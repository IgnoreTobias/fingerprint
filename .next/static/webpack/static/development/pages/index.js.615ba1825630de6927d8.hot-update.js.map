{"version":3,"file":"static/webpack/static/development/pages/index.js.615ba1825630de6927d8.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport md5 from 'md5'\nimport { getFingerprint } from \"../src/components/utils/fingerprint\";\n\nimport Title from '../src/components/atoms/title'\nconst Main = styled.main`\n  background: #282A36;\n  height: 100vh;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\nexport default () => {\n  const [fingerprint, setFingerprint] = useState();\n\n  useEffect(() => {\n    getFingerprint().then(\n      res => {\n        if(res !== []){\n          function objectsToString(res: unknown) {\n            var str = '';\n            // @ts-ignore\n            for (var i = 0, len = res.length; i < len; i++) {\n              // @ts-ignore\n              str += res[i].key + ' is ' + res[i].value + '. ';\n            }\n            return str;\n          }\n          const fingerPrintString = objectsToString(res)\n          const hashedFingerPrint = (md5(fingerPrintString))\n          setFingerprint(hashedFingerPrint)\n          const d = new Date()\n          d.setTime(d.getTime() + 10 * 365 * 24 * 60 * 60 * 1000)\n          const expires = d.toUTCString()\n          document.cookie = `FINGERPRINT=${hashedFingerPrint}; expires=${expires}`\n        }\n      }\n    )\n  }, [fingerprint]);\n\n  return (\n    <Main>\n      { fingerprint ? (\n        <Title fingerPrint={fingerprint}/>\n      ) : (\n        <p>loading...</p>\n      )\n      }\n    </Main>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}