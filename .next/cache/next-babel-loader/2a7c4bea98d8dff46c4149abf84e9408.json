{"ast":null,"code":"var _jsxFileName = \"/Users/tobiash/github/fingerprint/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport md5 from 'md5';\nimport { getFingerprint } from \"../src/components/utils/fingerprint\";\nimport Title from '../src/components/atoms/title';\nvar Main = styled.main.withConfig({\n  displayName: \"pages__Main\",\n  componentId: \"lrbmwi-0\"\n})([\"background:#282A36;height:100vh;width:100%;margin:0;padding:0;display:flex;align-items:center;justify-content:center;flex-direction:column;\"]);\nexport default (function () {\n  var _useState = useState(),\n      fingerprint = _useState[0],\n      setFingerprint = _useState[1];\n\n  useEffect(function () {\n    getFingerprint().then(function (res) {\n      var hashedFingerPrint = md5(res);\n      console.log(hashedFingerPrint);\n      setFingerprint(hashedFingerPrint);\n      var d = new Date();\n      d.setTime(d.getTime() + 10 * 365 * 24 * 60 * 60 * 1000);\n      var expires = d.toUTCString();\n      document.cookie = \"FINGERPRINT=\".concat(hashedFingerPrint, \"; expires=\").concat(expires);\n\n      if (res !== []) {\n        // @ts-ignore\n        res.Object.keys(obj).map(function (key) {\n          console.log(Number(key));\n        });\n      }\n    });\n  }, [fingerprint]);\n  return __jsx(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, fingerprint ? __jsx(Title, {\n    fingerPrint: fingerprint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"loading...\"));\n});","map":{"version":3,"sources":["/Users/tobiash/github/fingerprint/pages/index.tsx"],"names":["React","useEffect","useState","styled","md5","getFingerprint","Title","Main","main","fingerprint","setFingerprint","then","res","hashedFingerPrint","console","log","d","Date","setTime","getTime","expires","toUTCString","document","cookie","Object","keys","obj","map","key","Number"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAASC,cAAT,QAA+B,qCAA/B;AAEA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,IAAMC,IAAI,GAAGJ,MAAM,CAACK,IAAV;AAAA;AAAA;AAAA,mJAAV;AAYA,gBAAe,YAAM;AAAA,kBACmBN,QAAQ,EAD3B;AAAA,MACZO,WADY;AAAA,MACCC,cADD;;AAGnBT,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,cAAc,GAAGM,IAAjB,CACE,UAAAC,GAAG,EAAI;AACL,UAAMC,iBAAiB,GAAIT,GAAG,CAACQ,GAAD,CAA9B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AACAH,MAAAA,cAAc,CAACG,iBAAD,CAAd;AACA,UAAMG,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACAD,MAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,CAACG,OAAF,KAAc,KAAK,GAAL,GAAW,EAAX,GAAgB,EAAhB,GAAqB,EAArB,GAA0B,IAAlD;AACA,UAAMC,OAAO,GAAGJ,CAAC,CAACK,WAAF,EAAhB;AACAC,MAAAA,QAAQ,CAACC,MAAT,yBAAiCV,iBAAjC,uBAA+DO,OAA/D;;AAEA,UAAGR,GAAG,KAAK,EAAX,EAAc;AACZ;AACAA,QAAAA,GAAG,CAACY,MAAJ,CAAWC,IAAX,CAAgBC,GAAhB,EAAqBC,GAArB,CAAyB,UAASC,GAAT,EAAc;AACrCd,UAAAA,OAAO,CAACC,GAAR,CAAYc,MAAM,CAACD,GAAD,CAAlB;AACD,SAFD;AAGD;AACF,KAhBH;AAkBD,GAnBQ,EAmBN,CAACnB,WAAD,CAnBM,CAAT;AAqBA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,WAAW,GACX,MAAC,KAAD;AAAO,IAAA,WAAW,EAAEA,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,GAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADF;AAUD,CAlCD","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport md5 from 'md5'\nimport { getFingerprint } from \"../src/components/utils/fingerprint\";\n\nimport Title from '../src/components/atoms/title'\nconst Main = styled.main`\n  background: #282A36;\n  height: 100vh;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\nexport default () => {\n  const [fingerprint, setFingerprint] = useState();\n\n  useEffect(() => {\n    getFingerprint().then(\n      res => {\n        const hashedFingerPrint = (md5(res))\n        console.log(hashedFingerPrint)\n        setFingerprint(hashedFingerPrint)\n        const d = new Date()\n        d.setTime(d.getTime() + 10 * 365 * 24 * 60 * 60 * 1000)\n        const expires = d.toUTCString()\n        document.cookie = `FINGERPRINT=${hashedFingerPrint}; expires=${expires}`\n\n        if(res !== []){\n          // @ts-ignore\n          res.Object.keys(obj).map(function(key) {\n            console.log(Number(key));\n          });\n        }\n      }\n    )\n  }, [fingerprint]);\n\n  return (\n    <Main>\n      { fingerprint ? (\n        <Title fingerPrint={fingerprint}/>\n      ) : (\n        <p>loading...</p>\n      )\n      }\n    </Main>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}