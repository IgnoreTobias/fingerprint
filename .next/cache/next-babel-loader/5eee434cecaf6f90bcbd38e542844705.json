{"ast":null,"code":"var _jsxFileName = \"/Users/tobiash/github/fingerprint/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components'; // @ts-ignore\n\nimport NormalizeCss from 'normalize.css';\nimport imprint from 'imprintjs';\nvar browserTests = [\"audio\", \"availableScreenResolution\", \"canvas\", \"colorDepth\", \"cookies\", \"cpuClass\", \"deviceDpi\", \"doNotTrack\", \"indexedDb\", \"installedFonts\", //\"installedLanguages\",\n\"language\", \"localIp\", \"localStorage\", \"pixelRatio\", \"platform\", \"plugins\", \"processorCores\", \"screenResolution\", \"sessionStorage\", \"timezoneOffset\", \"touchSupport\", \"userAgent\", \"webGl\"];\nvar deviceTests = [\"audio\", \"colorDepth\", \"cpuClass\", \"deviceDpi\", \"localIp\", \"platform\", \"installedFonts\", \"processorCores\", \"publicIp\", \"screenResolution\", \"timezoneOffset\"];\nconsole.time('getImprint 1');\nimprint.test(browserTests).then(function (result) {\n  console.timeEnd(result);\n});\nconst MainCSS = createGlobalStyle(() => [NormalizeCss]);\n\nconst MyApp = props => {\n  const {\n    Component,\n    pageProps\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(MainCSS, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/tobiash/github/fingerprint/pages/_app.tsx"],"names":["React","createGlobalStyle","NormalizeCss","imprint","browserTests","deviceTests","console","time","test","then","result","timeEnd","MainCSS","MyApp","props","Component","pageProps"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAGA,IAAIC,YAAY,GAAG,CACjB,OADiB,EAEjB,2BAFiB,EAGjB,QAHiB,EAIjB,YAJiB,EAKjB,SALiB,EAMjB,UANiB,EAOjB,WAPiB,EAQjB,YARiB,EASjB,WATiB,EAUjB,gBAViB,EAWjB;AACA,UAZiB,EAajB,SAbiB,EAcjB,cAdiB,EAejB,YAfiB,EAgBjB,UAhBiB,EAiBjB,SAjBiB,EAkBjB,gBAlBiB,EAmBjB,kBAnBiB,EAoBjB,gBApBiB,EAqBjB,gBArBiB,EAsBjB,cAtBiB,EAuBjB,WAvBiB,EAwBjB,OAxBiB,CAAnB;AA2BA,IAAIC,WAAW,GAAG,CAChB,OADgB,EAEhB,YAFgB,EAGhB,UAHgB,EAIhB,WAJgB,EAKhB,SALgB,EAMhB,UANgB,EAOhB,gBAPgB,EAQhB,gBARgB,EAShB,UATgB,EAUhB,kBAVgB,EAWhB,gBAXgB,CAAlB;AAcAC,OAAO,CAACC,IAAR,CAAa,cAAb;AACAJ,OAAO,CAACK,IAAR,CAAaJ,YAAb,EAA2BK,IAA3B,CAAgC,UAASC,MAAT,EAAwB;AACtDJ,EAAAA,OAAO,CAACK,OAAR,CAAgBD,MAAhB;AACD,CAFD;AAKA,MAAME,OAAO,GAAGX,iBAAiB,CAAC,MAAM,CAACC,YAAD,CAAP,CAAjC;;AAGA,MAAMW,KAAK,GAAIC,KAAD,IAAgD;AAC5D,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC;AACA,SACE,4BACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,CARD;;AAUA,eAAeH,KAAf","sourcesContent":["\nimport React from 'react'\nimport { createGlobalStyle } from 'styled-components'\n// @ts-ignore\nimport NormalizeCss from 'normalize.css'\n\nimport imprint from 'imprintjs'\n\n\nvar browserTests = [\n  \"audio\",\n  \"availableScreenResolution\",\n  \"canvas\",\n  \"colorDepth\",\n  \"cookies\",\n  \"cpuClass\",\n  \"deviceDpi\",\n  \"doNotTrack\",\n  \"indexedDb\",\n  \"installedFonts\",\n  //\"installedLanguages\",\n  \"language\",\n  \"localIp\",\n  \"localStorage\",\n  \"pixelRatio\",\n  \"platform\",\n  \"plugins\",\n  \"processorCores\",\n  \"screenResolution\",\n  \"sessionStorage\",\n  \"timezoneOffset\",\n  \"touchSupport\",\n  \"userAgent\",\n  \"webGl\"\n];\n\nvar deviceTests = [\n  \"audio\",\n  \"colorDepth\",\n  \"cpuClass\",\n  \"deviceDpi\",\n  \"localIp\",\n  \"platform\",\n  \"installedFonts\",\n  \"processorCores\",\n  \"publicIp\",\n  \"screenResolution\",\n  \"timezoneOffset\"\n];\n\nconsole.time('getImprint 1');\nimprint.test(browserTests).then(function(result: string){\n  console.timeEnd(result);\n});\n\n\nconst MainCSS = createGlobalStyle(() => [NormalizeCss])\n\n\nconst MyApp = (props: { Component: any; pageProps: any; }) => {\n  const { Component, pageProps } = props\n  return (\n    <>\n      <MainCSS />\n      <Component {...pageProps} />\n    </>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}